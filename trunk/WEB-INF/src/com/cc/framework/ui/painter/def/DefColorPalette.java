/**
 * $Header: d:/repository/cvs/cc-framework/source/com/cc/framework/ui/painter/def/DefColorPalette.java,v 1.105 2005/11/13 14:03:57 P001002 Exp $
 * $Revision: 1.105 $
 * $Date: 2005/11/13 14:03:57 $
 *
 * ====================================================================
 *
 * THIS FILE WAS GENERATED BY CC-RESOURCEFACTORY
 *
 * USER...........: P001002
 * PAINTER........: def
 * BUILD-FACTORY..: v1.5.014
 * BUILD-DATE.....: Sun Nov 13 15:41:46 CET 2005
 * BUILD-DIRECTORY: C:\eclipse31\workspace\cc-framework
 * BUILD-FILE.....: C:\eclipse31\workspace\cc-framework\build\resources\resources.xml
 *
 * DO NOT MODIFY
 *
 * ====================================================================
 */

package com.cc.framework.ui.painter.def;

import java.io.Serializable;
import java.util.Hashtable;
import com.cc.framework.ui.Color;
import com.cc.framework.ui.painter.ColorPalette;

/**
 * Color Palette
 *
 * @author		cc-resourcefactory
 */
public class DefColorPalette implements ColorPalette, Serializable {

	/**
	 * Serial Verion UID
	 */
	private static final long serialVersionUID = 1L;

	/** Background */
	public static final String BUTTON_COLOR_BG = "button.color.bg";

	/** Border */
	public static final String BUTTON_COLOR_BORDER = "button.color.border";

	/** State activ (State id = 1) */
	public static final String BUTTON_COLOR_STATE_ACTIVE = "button.color.state.active";

	/** State down (State id = 4) */
	public static final String BUTTON_COLOR_STATE_DOWN = "button.color.state.down";

	/** State hover (State id = 3) */
	public static final String BUTTON_COLOR_STATE_HOVER = "button.color.state.hover";

	/** State inactiv (State id = 2) */
	public static final String BUTTON_COLOR_STATE_INACTIVE = "button.color.state.inactive";

	/** text */
	public static final String BUTTON_COLOR_TEXT_ACTIVE = "button.color.text.active";

	/** text inactive button */
	public static final String BUTTON_COLOR_TEXT_INACTIVE = "button.color.text.inactive";

	/** Disabled text */
	public static final String CRUMB_COLOR_TEXT_DISABLED = "crumb.color.text.disabled";

	/** Background body */
	public static final String ERROR_COLOR_BG_BODY = "error.color.bg.body";

	/** Background caption */
	public static final String ERROR_COLOR_BG_HEADER = "error.color.bg.header";

	/** Border color */
	public static final String ERROR_COLOR_BORDER = "error.color.border";

	/** Text color */
	public static final String ERROR_COLOR_TEXT = "error.color.text";

	/** Background color */
	public static final String FORM_COLOR_BG = "form.color.bg";

	/** Background field */
	public static final String FORM_COLOR_BG_FIELD = "form.color.bg.field";

	/** Background caption */
	public static final String FORM_COLOR_BG_HEADER = "form.color.bg.header";

	/** Background inner frame */
	public static final String FORM_COLOR_BG_IF = "form.color.bg.if";

	/** Background label */
	public static final String FORM_COLOR_BG_LABEL = "form.color.bg.label";

	/** Background section */
	public static final String FORM_COLOR_BG_SECTION = "form.color.bg.section";

	/** Border */
	public static final String FORM_COLOR_BORDER = "form.color.border";

	/** Border row */
	public static final String FORM_COLOR_BORDER_ITEM = "form.color.border.item";

	/** Border section */
	public static final String FORM_COLOR_BORDER_SECTION = "form.color.border.section";

	/** Text color caption */
	public static final String FORM_COLOR_TEXT_CAPTION = "form.color.text.caption";

	/** Text color detail */
	public static final String FORM_COLOR_TEXT_DETAIL = "form.color.text.detail";

	/** Text color header */
	public static final String FORM_COLOR_TEXT_HEADER = "form.color.text.header";

	/** Text color section */
	public static final String FORM_COLOR_TEXT_SECTION = "form.color.text.section";

	/** Background color */
	public static final String FRAME_COLOR_BG = "frame.color.bg";

	/** Background caption */
	public static final String FRAME_COLOR_BG_HEADER = "frame.color.bg.header";

	/** Background inner frame */
	public static final String FRAME_COLOR_BG_IF = "frame.color.bg.if";

	/** Border */
	public static final String FRAME_COLOR_BORDER = "frame.color.border";

	/** Text color caption */
	public static final String FRAME_COLOR_TEXT_CAPTION = "frame.color.text.caption";

	/** Text color detail */
	public static final String FRAME_COLOR_TEXT_DETAIL = "frame.color.text.detail";

	/** Text color header */
	public static final String FRAME_COLOR_TEXT_HEADER = "frame.color.text.header";

	/** Background */
	public static final String HEAD_COLOR_BG = "head.color.bg";

	/** Border color */
	public static final String HEAD_COLOR_BORDER = "head.color.border";

	/** Separator */
	public static final String HEAD_COLOR_SEPARATOR = "head.color.separator";

	/** Border */
	public static final String HEADER_COLOR_BORDER = "header.color.border";

	/** Text caption */
	public static final String HEADER_COLOR_TEXT_CAPTION = "header.color.text.caption";

	/** Text detail */
	public static final String HEADER_COLOR_TEXT_DETAIL = "header.color.text.detail";

	/** Background */
	public static final String HELP_COLOR_BG = "help.color.bg";

	/** Border */
	public static final String HELP_COLOR_BORDER = "help.color.border";

	/** Text */
	public static final String HELP_COLOR_TEXT = "help.color.text";

	/** Background */
	public static final String HMENU_COLOR_BG = "hmenu.color.bg";

	/** Background body */
	public static final String INFO_COLOR_BG_BODY = "info.color.bg.body";

	/** Background caption */
	public static final String INFO_COLOR_BG_HEADER = "info.color.bg.header";

	/** Border color */
	public static final String INFO_COLOR_BORDER = "info.color.border";

	/** Text color */
	public static final String INFO_COLOR_TEXT = "info.color.text";

	/** Background input field */
	public static final String LIST_COLOR_BG_INPUT = "list.color.bg.INPUT";

	/** Background body */
	public static final String LIST_COLOR_BG_BODY = "list.color.bg.body";

	/** Background column header (level 0) */
	public static final String LIST_COLOR_BG_COLHEADER = "list.color.bg.colheader";

	/** Background column header (level 1) */
	public static final String LIST_COLOR_BG_COLHEADER1 = "list.color.bg.colheader1";

	/** Background column header (level 2) */
	public static final String LIST_COLOR_BG_COLHEADER2 = "list.color.bg.colheader2";

	/** Background even Rows */
	public static final String LIST_COLOR_BG_EVEN = "list.color.bg.even";

	/** Background even Rows selected */
	public static final String LIST_COLOR_BG_EVENS = "list.color.bg.evens";

	/** Background header */
	public static final String LIST_COLOR_BG_HEADER = "list.color.bg.header";

	/** Row Highlighting color */
	public static final String LIST_COLOR_BG_HOVER = "list.color.bg.hover";

	/** Background inner frame */
	public static final String LIST_COLOR_BG_IF = "list.color.bg.if";

	/** Background odd Rows */
	public static final String LIST_COLOR_BG_ODD = "list.color.bg.odd";

	/** Background odd Rows selected */
	public static final String LIST_COLOR_BG_ODDS = "list.color.bg.odds";

	/** Border input field */
	public static final String LIST_COLOR_BORDER_INPUT = "list.color.border.INPUT";

	/** Border body */
	public static final String LIST_COLOR_BORDER_BODY = "list.color.border.body";

	/** Border inner frame */
	public static final String LIST_COLOR_BORDER_IF = "list.color.border.if";

	/** Text color Hyperlink */
	public static final String LIST_COLOR_TEXT_A = "list.color.text.A";

	/** Text color caption */
	public static final String LIST_COLOR_TEXT_CAPTION = "list.color.text.caption";

	/** Text colot column label (level 0) */
	public static final String LIST_COLOR_TEXT_COLHEADER = "list.color.text.colheader";

	/** Text colot column label (level 1) */
	public static final String LIST_COLOR_TEXT_COLHEADER1 = "list.color.text.colheader1";

	/** Text colot column label (level 2) */
	public static final String LIST_COLOR_TEXT_COLHEADER2 = "list.color.text.colheader2";

	/** Text color detail text */
	public static final String LIST_COLOR_TEXT_DETAIL = "list.color.text.detail";

	/** Text color header */
	public static final String LIST_COLOR_TEXT_HEADER = "list.color.text.header";

	/** Background body */
	public static final String PANEL_COLOR_BG_BODY = "panel.color.bg.body";

	/** Background header */
	public static final String PANEL_COLOR_BG_HEADER = "panel.color.bg.header";

	/** border body */
	public static final String PANEL_COLOR_BORDER_BODY = "panel.color.border.body";

	/** Border header */
	public static final String PANEL_COLOR_BORDER_HEADER = "panel.color.border.header";

	/** Item border */
	public static final String PANEL_COLOR_ITEM_BORDER = "panel.color.item.border";

	/** Text header */
	public static final String PANEL_COLOR_TEXT_HEADER = "panel.color.text.header";

	/** Background multiday appointment */
	public static final String SCHEDULER_COLOR_BG_APP = "scheduler.color.bg.app";

	/** Background body */
	public static final String SCHEDULER_COLOR_BG_BODY = "scheduler.color.bg.body";

	/** Background days header */
	public static final String SCHEDULER_COLOR_BG_DAYS = "scheduler.color.bg.days";

	/** Background header */
	public static final String SCHEDULER_COLOR_BG_HEADER = "scheduler.color.bg.header";

	/** Background inner frame */
	public static final String SCHEDULER_COLOR_BG_IF = "scheduler.color.bg.if";

	/** Background navigation header */
	public static final String SCHEDULER_COLOR_BG_NAV = "scheduler.color.bg.nav";

	/** Background overflow area */
	public static final String SCHEDULER_COLOR_BG_OVERFLOW = "scheduler.color.bg.overflow";

	/** Border multiday appointment */
	public static final String SCHEDULER_COLOR_BORDER_APP = "scheduler.color.border.app";

	/** Border body */
	public static final String SCHEDULER_COLOR_BORDER_BODY = "scheduler.color.border.body";

	/** Border days header */
	public static final String SCHEDULER_COLOR_BORDER_DAYS = "scheduler.color.border.days";

	/** Border inner frame */
	public static final String SCHEDULER_COLOR_BORDER_IF = "scheduler.color.border.if";

	/** Border today */
	public static final String SCHEDULER_COLOR_BORDER_TODAY = "scheduler.color.border.today";

	/** Background day view */
	public static final String SCHEDULER_COLOR_DAYVIEW_BG = "scheduler.color.dayview.bg";

	/** Background day view (all day area) */
	public static final String SCHEDULER_COLOR_DAYVIEW_BG_ALLDAY = "scheduler.color.dayview.bg.allday";

	/** Background appointment container */
	public static final String SCHEDULER_COLOR_DAYVIEW_BG_APPS = "scheduler.color.dayview.bg.apps";

	/** Background spare time */
	public static final String SCHEDULER_COLOR_DAYVIEW_BG_ST = "scheduler.color.dayview.bg.st";

	/** Background working time */
	public static final String SCHEDULER_COLOR_DAYVIEW_BG_WT = "scheduler.color.dayview.bg.wt";

	/** Border day view */
	public static final String SCHEDULER_COLOR_DAYVIEW_BORDER = "scheduler.color.dayview.border";

	/** Border appointment container */
	public static final String SCHEDULER_COLOR_DAYVIEW_BORDER_APPS = "scheduler.color.dayview.border.apps";

	/** Border of the time table */
	public static final String SCHEDULER_COLOR_DAYVIEW_BORDER_TABLE = "scheduler.color.dayview.border.table";

	/** Text day view */
	public static final String SCHEDULER_COLOR_DAYVIEW_TEXT = "scheduler.color.dayview.text";

	/** Text day view (all day area) */
	public static final String SCHEDULER_COLOR_DAYVIEW_TEXT_ALLDAY = "scheduler.color.dayview.text.allday";

	/** Background month view */
	public static final String SCHEDULER_COLOR_MONTHVIEW_BG = "scheduler.color.monthview.bg";

	/** Background month view (day in month) */
	public static final String SCHEDULER_COLOR_MONTHVIEW_BG_DIM = "scheduler.color.monthview.bg.dim";

	/** Background month view (day outside month) */
	public static final String SCHEDULER_COLOR_MONTHVIEW_BG_DOM = "scheduler.color.monthview.bg.dom";

	/** Text month view */
	public static final String SCHEDULER_COLOR_MONTHVIEW_TEXT = "scheduler.color.monthview.text";

	/** Text color hyperlink */
	public static final String SCHEDULER_COLOR_TEXT_A = "scheduler.color.text.A";

	/** Text color caption */
	public static final String SCHEDULER_COLOR_TEXT_CAPTION = "scheduler.color.text.caption";

	/** Text days header */
	public static final String SCHEDULER_COLOR_TEXT_DAYS = "scheduler.color.text.days";

	/** Text color detail text */
	public static final String SCHEDULER_COLOR_TEXT_DETAIL = "scheduler.color.text.detail";

	/** Text color label */
	public static final String SCHEDULER_COLOR_TEXT_HEADER = "scheduler.color.text.header";

	/** Text navigation header */
	public static final String SCHEDULER_COLOR_TEXT_NAV = "scheduler.color.text.nav";

	/** Background week view */
	public static final String SCHEDULER_COLOR_WEEKVIEW_BG = "scheduler.color.weekview.bg";

	/** Border week view */
	public static final String SCHEDULER_COLOR_WEEKVIEW_BORDER = "scheduler.color.weekview.border";

	/** Text week view */
	public static final String SCHEDULER_COLOR_WEEKVIEW_TEXT = "scheduler.color.weekview.text";

	/** Background year view (day in month) */
	public static final String SCHEDULER_COLOR_YEARVIEW_BG_DIM = "scheduler.color.yearview.bg.dim";

	/** Background year view (day in month) */
	public static final String SCHEDULER_COLOR_YEARVIEW_BG_DIM_APPS = "scheduler.color.yearview.bg.dim.apps";

	/** Background year view (day in month) */
	public static final String SCHEDULER_COLOR_YEARVIEW_BG_DIM_NF = "scheduler.color.yearview.bg.dim_nf";

	/** Background year view (day outside month) */
	public static final String SCHEDULER_COLOR_YEARVIEW_BG_DOM = "scheduler.color.yearview.bg.dom";

	/** Background year view (day outside month) */
	public static final String SCHEDULER_COLOR_YEARVIEW_BG_DOM_APPS = "scheduler.color.yearview.bg.dom.apps";

	/** Background year view (day outside month) */
	public static final String SCHEDULER_COLOR_YEARVIEW_BG_DOM_NF = "scheduler.color.yearview.bg.dom_nf";

	/** Text year view */
	public static final String SCHEDULER_COLOR_YEARVIEW_TEXT = "scheduler.color.yearview.text";

	/** Background color */
	public static final String SELECTION_COLOR_BG = "selection.color.bg";

	/** Background body */
	public static final String SEVERITY_COLOR_BG_BODY = "severity.color.bg.body";

	/** Background caption */
	public static final String SEVERITY_COLOR_BG_HEADER = "severity.color.bg.header";

	/** Border color */
	public static final String SEVERITY_COLOR_BORDER = "severity.color.border";

	/** Text color */
	public static final String SEVERITY_COLOR_TEXT = "severity.color.text";

	/** Background inactiv Tab */
	public static final String TABBAR_COLOR_BG_DISABLED = "tabbar.color.bg.disabled";

	/** Background level 1 */
	public static final String TABBAR_COLOR_BG_LEVEL1 = "tabbar.color.bg.level1";

	/** Background level 2 */
	public static final String TABBAR_COLOR_BG_LEVEL2 = "tabbar.color.bg.level2";

	/** Background level 3 */
	public static final String TABBAR_COLOR_BG_LEVEL3 = "tabbar.color.bg.level3";

	/** Border */
	public static final String TABBAR_COLOR_BORDER = "tabbar.color.border";

	/** Text color */
	public static final String TABBAR_COLOR_TEXT = "tabbar.color.text";

	/** Text selected Tab */
	public static final String TABBAR_COLOR_TEXT_SEL = "tabbar.color.text.sel";

	/** Text unselected Tab */
	public static final String TABBAR_COLOR_TEXT_UNSEL = "tabbar.color.text.unsel";

	/** Background inactiv Tab */
	public static final String TABSET_COLOR_BG_DISABLED = "tabset.color.bg.disabled";

	/** Background level 1 */
	public static final String TABSET_COLOR_BG_LEVEL1 = "tabset.color.bg.level1";

	/** Background level 2 */
	public static final String TABSET_COLOR_BG_LEVEL2 = "tabset.color.bg.level2";

	/** Background level 3 */
	public static final String TABSET_COLOR_BG_LEVEL3 = "tabset.color.bg.level3";

	/** Border */
	public static final String TABSET_COLOR_BORDER = "tabset.color.border";

	/** Text color */
	public static final String TABSET_COLOR_TEXT = "tabset.color.text";

	/** Text selected Tab */
	public static final String TABSET_COLOR_TEXT_SEL = "tabset.color.text.sel";

	/** Text unselected Tab */
	public static final String TABSET_COLOR_TEXT_UNSEL = "tabset.color.text.unsel";

	/** Background even row */
	public static final String TREE_COLOR_BG_EVEN = "tree.color.bg.even";

	/** Background odd row */
	public static final String TREE_COLOR_BG_ODD = "tree.color.bg.odd";

	/** Background selected row */
	public static final String TREE_COLOR_BG_SEL = "tree.color.bg.sel";

	/** Border row */
	public static final String TREE_COLOR_BORDER = "tree.color.border";

	/** Text color hyperlink */
	public static final String TREE_COLOR_TEXT_A = "tree.color.text.A";

	/** Text color hyperlink selected row */
	public static final String TREE_COLOR_TEXT_A_SEL = "tree.color.text.A.sel";

	/** Background level 1 */
	public static final String VMENU1_COLOR_BG = "vmenu1.color.bg";

	/** Background level 1 disabled */
	public static final String VMENU1_COLOR_BG_DISABLED = "vmenu1.color.bg.disabled";

	/** Background level 1 selected */
	public static final String VMENU1_COLOR_BG_SEL = "vmenu1.color.bg.sel";

	/** Border level 1 */
	public static final String VMENU1_COLOR_BORDER = "vmenu1.color.border";

	/** Text hyperlink level 1 */
	public static final String VMENU1_COLOR_TEXT_A = "vmenu1.color.text.A";

	/** Text hyperlink level 1 selected */
	public static final String VMENU1_COLOR_TEXT_A_SEL = "vmenu1.color.text.A.sel";

	/** Text level 1 disabled */
	public static final String VMENU1_COLOR_TEXT_DISABLED = "vmenu1.color.text.disabled";

	/** Background level 2 */
	public static final String VMENU2_COLOR_BG = "vmenu2.color.bg";

	/** Background level 2 disabled */
	public static final String VMENU2_COLOR_BG_DISABLED = "vmenu2.color.bg.disabled";

	/** Background level 2 selected */
	public static final String VMENU2_COLOR_BG_SEL = "vmenu2.color.bg.sel";

	/** Border level 2 */
	public static final String VMENU2_COLOR_BORDER = "vmenu2.color.border";

	/** Text level 2 */
	public static final String VMENU2_COLOR_TEXT = "vmenu2.color.text";

	/** Text hyperlink level 2 */
	public static final String VMENU2_COLOR_TEXT_A = "vmenu2.color.text.A";

	/** Text hyperlink level 2 selected */
	public static final String VMENU2_COLOR_TEXT_A_SEL = "vmenu2.color.text.A.sel";

	/** Text level 2 disabled */
	public static final String VMENU2_COLOR_TEXT_DISABLED = "vmenu2.color.text.disabled";

	/** Text level 2 selected */
	public static final String VMENU2_COLOR_TEXT_SEL = "vmenu2.color.text.sel";

	/** Background level 3 */
	public static final String VMENU3_COLOR_BG = "vmenu3.color.bg";

	/** Background level 3 disabled */
	public static final String VMENU3_COLOR_BG_DISABLED = "vmenu3.color.bg.disabled";

	/** Background level 3 selected */
	public static final String VMENU3_COLOR_BG_SEL = "vmenu3.color.bg.sel";

	/** Border level 3 */
	public static final String VMENU3_COLOR_BORDER = "vmenu3.color.border";

	/** Text level 3 */
	public static final String VMENU3_COLOR_TEXT = "vmenu3.color.text";

	/** Text hyperlink level 3 */
	public static final String VMENU3_COLOR_TEXT_A = "vmenu3.color.text.A";

	/** Text hyperlink level 3 selected */
	public static final String VMENU3_COLOR_TEXT_A_SEL = "vmenu3.color.text.A.sel";

	/** Text level 3 disabled */
	public static final String VMENU3_COLOR_TEXT_DISABLED = "vmenu3.color.text.disabled";

	/** Background body */
	public static final String WARNING_COLOR_BG_BODY = "warning.color.bg.body";

	/** Background caption */
	public static final String WARNING_COLOR_BG_HEADER = "warning.color.bg.header";

	/** Border color */
	public static final String WARNING_COLOR_BORDER = "warning.color.border";

	/** Text color */
	public static final String WARNING_COLOR_TEXT = "warning.color.text";

	/** Color Palette entries */
	private static final Hashtable PALETTE = new Hashtable();

	static {
		Color col000000 = new Color(0);
		Color col0000FF = new Color(255);
		Color col005A6B = new Color(23147);
		Color col808080 = new Color(8421504);
		Color col80ADBA = new Color(8433082);
		Color col84ADBD = new Color(8695229);
		Color col87B1BA = new Color(8892858);
		Color col8D9DA1 = new Color(9280929);
		Color colA5C4CB = new Color(10863819);
		Color colA7C2C7 = new Color(10994375);
		Color colAAAAAA = new Color(11184810);
		Color colB4CED4 = new Color(11849428);
		Color colBDBDBD = new Color(12434877);
		Color colC1D6DB = new Color(12703451);
		Color colC4C8C9 = new Color(12896457);
		Color colC7003C = new Color(13041724);
		Color colCECECE = new Color(13553358);
		Color colD4D0C8 = new Color(13947080);
		Color colDADFE0 = new Color(14344160);
		Color colDCE8EB = new Color(14477547);
		Color colDCE8EC = new Color(14477548);
		Color colDDDDDD = new Color(14540253);
		Color colE7CD9F = new Color(15191455);
		Color colEDEFF0 = new Color(15593456);
		Color colEFEFEF = new Color(15724527);
		Color colF3F4F5 = new Color(15987957);
		Color colF57E17 = new Color(16088599);
		Color colFAD00E = new Color(16437262);
		Color colFAE4C2 = new Color(16442562);
		Color colFEA217 = new Color(16687639);
		Color colFEEEA4 = new Color(16707236);
		Color colFFA510 = new Color(16753936);
		Color colFFCC99 = new Color(16764057);
		Color colFFD3D3 = new Color(16765907);
		Color colFFD791 = new Color(16766865);
		Color colFFFFE1 = new Color(16777185);
		Color colFFFFE7 = new Color(16777191);
		Color colFFFFFF = new Color(16777215);

		PALETTE.put(BUTTON_COLOR_BG, colFFFFFF);
		PALETTE.put(BUTTON_COLOR_BORDER, col005A6B);
		PALETTE.put(BUTTON_COLOR_STATE_ACTIVE, col005A6B);
		PALETTE.put(BUTTON_COLOR_STATE_DOWN, col84ADBD);
		PALETTE.put(BUTTON_COLOR_STATE_HOVER, colFFA510);
		PALETTE.put(BUTTON_COLOR_STATE_INACTIVE, colCECECE);
		PALETTE.put(BUTTON_COLOR_TEXT_ACTIVE, col000000);
		PALETTE.put(BUTTON_COLOR_TEXT_INACTIVE, colCECECE);
		PALETTE.put(CRUMB_COLOR_TEXT_DISABLED, colAAAAAA);
		PALETTE.put(ERROR_COLOR_BG_BODY, colFFD3D3);
		PALETTE.put(ERROR_COLOR_BG_HEADER, colC7003C);
		PALETTE.put(ERROR_COLOR_BORDER, colC7003C);
		PALETTE.put(ERROR_COLOR_TEXT, colC7003C);
		PALETTE.put(FORM_COLOR_BG, colDADFE0);
		PALETTE.put(FORM_COLOR_BG_FIELD, colEFEFEF);
		PALETTE.put(FORM_COLOR_BG_HEADER, col005A6B);
		PALETTE.put(FORM_COLOR_BG_IF, colFFFFFF);
		PALETTE.put(FORM_COLOR_BG_LABEL, colDADFE0);
		PALETTE.put(FORM_COLOR_BG_SECTION, colA7C2C7);
		PALETTE.put(FORM_COLOR_BORDER, col005A6B);
		PALETTE.put(FORM_COLOR_BORDER_ITEM, colBDBDBD);
		PALETTE.put(FORM_COLOR_BORDER_SECTION, col005A6B);
		PALETTE.put(FORM_COLOR_TEXT_CAPTION, colFFFFFF);
		PALETTE.put(FORM_COLOR_TEXT_DETAIL, colFFFFFF);
		PALETTE.put(FORM_COLOR_TEXT_HEADER, colFFFFFF);
		PALETTE.put(FORM_COLOR_TEXT_SECTION, col005A6B);
		PALETTE.put(FRAME_COLOR_BG, colDADFE0);
		PALETTE.put(FRAME_COLOR_BG_HEADER, col005A6B);
		PALETTE.put(FRAME_COLOR_BG_IF, colFFFFFF);
		PALETTE.put(FRAME_COLOR_BORDER, col005A6B);
		PALETTE.put(FRAME_COLOR_TEXT_CAPTION, colFFFFFF);
		PALETTE.put(FRAME_COLOR_TEXT_DETAIL, colFFFFFF);
		PALETTE.put(FRAME_COLOR_TEXT_HEADER, colFFFFFF);
		PALETTE.put(HEAD_COLOR_BG, colDADFE0);
		PALETTE.put(HEAD_COLOR_BORDER, col005A6B);
		PALETTE.put(HEAD_COLOR_SEPARATOR, colFFFFFF);
		PALETTE.put(HEADER_COLOR_BORDER, col80ADBA);
		PALETTE.put(HEADER_COLOR_TEXT_CAPTION, colF57E17);
		PALETTE.put(HEADER_COLOR_TEXT_DETAIL, col80ADBA);
		PALETTE.put(HELP_COLOR_BG, colFFFFE1);
		PALETTE.put(HELP_COLOR_BORDER, col000000);
		PALETTE.put(HELP_COLOR_TEXT, col000000);
		PALETTE.put(HMENU_COLOR_BG, colB4CED4);
		PALETTE.put(INFO_COLOR_BG_BODY, colDCE8EB);
		PALETTE.put(INFO_COLOR_BG_HEADER, colA5C4CB);
		PALETTE.put(INFO_COLOR_BORDER, colA5C4CB);
		PALETTE.put(INFO_COLOR_TEXT, col005A6B);
		PALETTE.put(LIST_COLOR_BG_INPUT, colFFFFFF);
		PALETTE.put(LIST_COLOR_BG_BODY, colDADFE0);
		PALETTE.put(LIST_COLOR_BG_COLHEADER, col80ADBA);
		PALETTE.put(LIST_COLOR_BG_COLHEADER1, col80ADBA);
		PALETTE.put(LIST_COLOR_BG_COLHEADER2, col80ADBA);
		PALETTE.put(LIST_COLOR_BG_EVEN, colEDEFF0);
		PALETTE.put(LIST_COLOR_BG_EVENS, colFFCC99);
		PALETTE.put(LIST_COLOR_BG_HEADER, col005A6B);
		PALETTE.put(LIST_COLOR_BG_HOVER, colDCE8EC);
		PALETTE.put(LIST_COLOR_BG_IF, colFFFFFF);
		PALETTE.put(LIST_COLOR_BG_ODD, colFFFFFF);
		PALETTE.put(LIST_COLOR_BG_ODDS, colFFCC99);
		PALETTE.put(LIST_COLOR_BORDER_INPUT, col005A6B);
		PALETTE.put(LIST_COLOR_BORDER_BODY, col005A6B);
		PALETTE.put(LIST_COLOR_BORDER_IF, col005A6B);
		PALETTE.put(LIST_COLOR_TEXT_A, col0000FF);
		PALETTE.put(LIST_COLOR_TEXT_CAPTION, colFFFFFF);
		PALETTE.put(LIST_COLOR_TEXT_COLHEADER, colFFFFFF);
		PALETTE.put(LIST_COLOR_TEXT_COLHEADER1, colFFFFFF);
		PALETTE.put(LIST_COLOR_TEXT_COLHEADER2, colFFFFFF);
		PALETTE.put(LIST_COLOR_TEXT_DETAIL, colFFFFFF);
		PALETTE.put(LIST_COLOR_TEXT_HEADER, colFFFFFF);
		PALETTE.put(PANEL_COLOR_BG_BODY, colDCE8EB);
		PALETTE.put(PANEL_COLOR_BG_HEADER, colC1D6DB);
		PALETTE.put(PANEL_COLOR_BORDER_BODY, colDCE8EB);
		PALETTE.put(PANEL_COLOR_BORDER_HEADER, colFFFFFF);
		PALETTE.put(PANEL_COLOR_ITEM_BORDER, col808080);
		PALETTE.put(PANEL_COLOR_TEXT_HEADER, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_BG_APP, colCECECE);
		PALETTE.put(SCHEDULER_COLOR_BG_BODY, colDADFE0);
		PALETTE.put(SCHEDULER_COLOR_BG_DAYS, col80ADBA);
		PALETTE.put(SCHEDULER_COLOR_BG_HEADER, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_BG_IF, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_BG_NAV, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_BG_OVERFLOW, col808080);
		PALETTE.put(SCHEDULER_COLOR_BORDER_APP, col000000);
		PALETTE.put(SCHEDULER_COLOR_BORDER_BODY, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_BORDER_DAYS, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_BORDER_IF, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_BORDER_TODAY, colFEA217);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_BG, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_BG_ALLDAY, col808080);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_BG_APPS, colFFFFE1);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_BG_ST, colEDEFF0);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_BG_WT, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_BORDER, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_BORDER_APPS, colCECECE);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_BORDER_TABLE, colDADFE0);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_TEXT, col000000);
		PALETTE.put(SCHEDULER_COLOR_DAYVIEW_TEXT_ALLDAY, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_MONTHVIEW_BG, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_MONTHVIEW_BG_DIM, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_MONTHVIEW_BG_DOM, colD4D0C8);
		PALETTE.put(SCHEDULER_COLOR_MONTHVIEW_TEXT, col000000);
		PALETTE.put(SCHEDULER_COLOR_TEXT_A, col000000);
		PALETTE.put(SCHEDULER_COLOR_TEXT_CAPTION, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_TEXT_DAYS, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_TEXT_DETAIL, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_TEXT_HEADER, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_TEXT_NAV, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_WEEKVIEW_BG, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_WEEKVIEW_BORDER, col005A6B);
		PALETTE.put(SCHEDULER_COLOR_WEEKVIEW_TEXT, col000000);
		PALETTE.put(SCHEDULER_COLOR_YEARVIEW_BG_DIM, colFFFFFF);
		PALETTE.put(SCHEDULER_COLOR_YEARVIEW_BG_DIM_APPS, colFFD791);
		PALETTE.put(SCHEDULER_COLOR_YEARVIEW_BG_DIM_NF, colEDEFF0);
		PALETTE.put(SCHEDULER_COLOR_YEARVIEW_BG_DOM, colD4D0C8);
		PALETTE.put(SCHEDULER_COLOR_YEARVIEW_BG_DOM_APPS, colE7CD9F);
		PALETTE.put(SCHEDULER_COLOR_YEARVIEW_BG_DOM_NF, colDDDDDD);
		PALETTE.put(SCHEDULER_COLOR_YEARVIEW_TEXT, col000000);
		PALETTE.put(SELECTION_COLOR_BG, colFFA510);
		PALETTE.put(SEVERITY_COLOR_BG_BODY, colFFFFE7);
		PALETTE.put(SEVERITY_COLOR_BG_HEADER, col808080);
		PALETTE.put(SEVERITY_COLOR_BORDER, col808080);
		PALETTE.put(SEVERITY_COLOR_TEXT, col000000);
		PALETTE.put(TABBAR_COLOR_BG_DISABLED, col8D9DA1);
		PALETTE.put(TABBAR_COLOR_BG_LEVEL1, colEFEFEF);
		PALETTE.put(TABBAR_COLOR_BG_LEVEL2, colDADFE0);
		PALETTE.put(TABBAR_COLOR_BG_LEVEL3, colC4C8C9);
		PALETTE.put(TABBAR_COLOR_BORDER, col005A6B);
		PALETTE.put(TABBAR_COLOR_TEXT, col000000);
		PALETTE.put(TABBAR_COLOR_TEXT_SEL, col000000);
		PALETTE.put(TABBAR_COLOR_TEXT_UNSEL, colFFFFFF);
		PALETTE.put(TABSET_COLOR_BG_DISABLED, col8D9DA1);
		PALETTE.put(TABSET_COLOR_BG_LEVEL1, colEFEFEF);
		PALETTE.put(TABSET_COLOR_BG_LEVEL2, colDADFE0);
		PALETTE.put(TABSET_COLOR_BG_LEVEL3, colC4C8C9);
		PALETTE.put(TABSET_COLOR_BORDER, col005A6B);
		PALETTE.put(TABSET_COLOR_TEXT, col000000);
		PALETTE.put(TABSET_COLOR_TEXT_SEL, col000000);
		PALETTE.put(TABSET_COLOR_TEXT_UNSEL, colFFFFFF);
		PALETTE.put(TREE_COLOR_BG_EVEN, colF3F4F5);
		PALETTE.put(TREE_COLOR_BG_ODD, colFFFFFF);
		PALETTE.put(TREE_COLOR_BG_SEL, colFEA217);
		PALETTE.put(TREE_COLOR_BORDER, colDCE8EB);
		PALETTE.put(TREE_COLOR_TEXT_A, col000000);
		PALETTE.put(TREE_COLOR_TEXT_A_SEL, colFFFFFF);
		PALETTE.put(VMENU1_COLOR_BG, col87B1BA);
		PALETTE.put(VMENU1_COLOR_BG_DISABLED, col87B1BA);
		PALETTE.put(VMENU1_COLOR_BG_SEL, col87B1BA);
		PALETTE.put(VMENU1_COLOR_BORDER, colFFFFFF);
		PALETTE.put(VMENU1_COLOR_TEXT_A, col005A6B);
		PALETTE.put(VMENU1_COLOR_TEXT_A_SEL, col005A6B);
		PALETTE.put(VMENU1_COLOR_TEXT_DISABLED, colC1D6DB);
		PALETTE.put(VMENU2_COLOR_BG, colC1D6DB);
		PALETTE.put(VMENU2_COLOR_BG_DISABLED, colC1D6DB);
		PALETTE.put(VMENU2_COLOR_BG_SEL, colFEA217);
		PALETTE.put(VMENU2_COLOR_BORDER, colFFFFFF);
		PALETTE.put(VMENU2_COLOR_TEXT, col005A6B);
		PALETTE.put(VMENU2_COLOR_TEXT_A, col005A6B);
		PALETTE.put(VMENU2_COLOR_TEXT_A_SEL, colFFFFFF);
		PALETTE.put(VMENU2_COLOR_TEXT_DISABLED, col808080);
		PALETTE.put(VMENU2_COLOR_TEXT_SEL, colFFFFFF);
		PALETTE.put(VMENU3_COLOR_BG, colFAE4C2);
		PALETTE.put(VMENU3_COLOR_BG_DISABLED, colFAE4C2);
		PALETTE.put(VMENU3_COLOR_BG_SEL, colFAE4C2);
		PALETTE.put(VMENU3_COLOR_BORDER, colFFFFFF);
		PALETTE.put(VMENU3_COLOR_TEXT, col000000);
		PALETTE.put(VMENU3_COLOR_TEXT_A, col000000);
		PALETTE.put(VMENU3_COLOR_TEXT_A_SEL, col000000);
		PALETTE.put(VMENU3_COLOR_TEXT_DISABLED, col808080);
		PALETTE.put(WARNING_COLOR_BG_BODY, colFEEEA4);
		PALETTE.put(WARNING_COLOR_BG_HEADER, colFAD00E);
		PALETTE.put(WARNING_COLOR_BORDER, colFAD00E);
		PALETTE.put(WARNING_COLOR_TEXT, colFAD00E);
	}

	/**
	 * Retrieves a color for the specified Id
	 * 
	 * @param		resourceId Color Id
	 * @return		The Color or <code>null</code>
	 */
	public Color getColor(String resourceId) {
		return (Color) PALETTE.get(resourceId);
	}
}
